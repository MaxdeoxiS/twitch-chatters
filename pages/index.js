import axios from 'axios'
import Head from 'next/head'
import { useEffect, useState } from 'react'
import TextField from '@mui/material/TextField'
import Stack from '@mui/material/Stack'
import LoadingButton from '@mui/lab/LoadingButton';
import Button from '@mui/material/Button';

import styles from '../styles/Home.module.css'
import ChattersList from '../components/ChattersList'
import SearchInput from '../components/SearchInput'
import { Check, Edit, Group } from '@mui/icons-material'

function formatChatters(allChatters) {
  if (!allChatters) {
    return []
  }
  const moderators = allChatters.moderators.map(m => {
    return {
      username: m,
      status: 'moderator'
    }
  });
  const vips = allChatters.vips.map(m => {
    return {
      username: m,
      status: 'vip'
    }
  });
  const viewers = allChatters.viewers.map(m => {
    return {
      username: m,
      status: 'viewer'
    }
  });

  return [...moderators, ...vips, ...viewers];
}

export default function Home() {
  const [streamer, setStreamer] = useState()
  const [streamerValidated, setStreamerValidated] = useState(false)
  const [displaySearchBox, setDisplayCheckbox] = useState(true)
  const [chatters, setChatters] = useState([])
  const [chattersCount, setChattersCount] = useState(null)
  const [loading, setLoading] = useState(false)
  const [searchValue, setSearchValue] = useState('')

  useEffect(() => {
    async function fetchChatters() {
      setLoading(true)
      const { data } = await axios.get('/api/chatters/' + streamer);
      const count = data['chatter_count'];
      const formattedChatters = formatChatters(data.chatters);
      setChatters(formattedChatters);
      setChattersCount(count)
      setStreamerValidated(false)
      setDisplayCheckbox(false)
      setLoading(false)
    }
    if (streamerValidated) {
      fetchChatters();
    }
  }, [streamer, streamerValidated])

  return (
    <div className={styles.container}>
      <Head>
        <title>Twitch Chatters</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main className={styles.main}>
        <div className={styles.header}>
          {displaySearchBox ? (
            <Stack spacing={2} direction="row" style={{ maxWidth: 220 }}>
              <TextField
                onChange={e => setStreamer(e.target.value)}
                variant="outlined"
                value={streamer}
                size="small"
              />
              <LoadingButton size="small" loading={loading} disabled={!streamer || streamer?.length === 0} variant="outlined" onClick={() => setStreamerValidated(true)}>
                <Check />
              </LoadingButton>
            </Stack>
          ) : (
            <Stack spacing={2} direction="row" alignItems="center">
              <h3 className={styles.count_container}><Group />{chattersCount}</h3>
              <Button endIcon={<Edit />} color="primary" onClick={() => setDisplayCheckbox(true)}>
                {streamer}
              </Button>
            </Stack>
          )}
        </div>

        <SearchInput value={searchValue} onChange={e => setSearchValue(e.target.value)} />
        <ChattersList chatters={chatters?.filter(c => c.username?.toLowerCase().includes(searchValue.toLowerCase()))} />
      </main>
    </div>
  )
}
